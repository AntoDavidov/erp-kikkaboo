plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.3'
    id 'io.spring.dependency-management' version '1.1.6'
    id "org.sonarqube" version "5.1.0.4882"
    id 'jacoco'
}

group = 'nl.fontys.s3'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'
    implementation 'org.flywaydb:flyway-core'
    implementation 'mysql:mysql-connector-java:8.0.33'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    implementation 'org.flywaydb:flyway-mysql'
}

tasks.named('test') {
    useJUnitPlatform()
}

sonar{
    properties{
        property("sonar.projectKey", "sonar-demo")
        property("sonar.projectName", "sonar-demo")
        property("sonar.host.url", "http://localhost:9000")
        property("sonar.token", "sqp_910b7f4635bf5d5c20ade7bf032455b16e580bd5")

    }
}

jacocoTestReport {
    reports{
        xml.required = true
    }
}
